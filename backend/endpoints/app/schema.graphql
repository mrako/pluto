schema {
    query: Query
    mutation: Mutation
}

type Project {
    uuid: ID!
    name: String!
    description: String
}

type ProjectResult {
    success: Boolean!
    errors: [String]
    project: Project
}

type ProjectsResult {
    success: Boolean!
    errors: [String]
    projects: [Project]
}

type DeleteProjectResult {
    success: Boolean!
    errors: [String]
}

type Organisation {
    uuid: ID!
    name: String!
    owner: String!
    description: String
}

type Query {
    projectsByOrg(organisationUuid: ID!): ProjectsResult!
    projectsByUser(userUuid: ID!): ProjectsResult!
    projectByOrg(organisationUuid: ID!, projectUuid: ID!): ProjectResult!
    projectByUser(userUuid: ID!, projectUuid: ID!): ProjectResult!
}

type Mutation {
    createProject(name: String!, description: String): ProjectResult!
    updateDescription(description: String!): ProjectResult!
    deleteProject(projectUuid: ID!): DeleteProjectResult!
}