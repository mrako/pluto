name: Build and deploy lambdas
on:
  push:
    branches: [main]
jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name:  Build, tag and push api image to Amazon ECR
        run: |
          for i in $(seq 10)
          do
            docker build -f ./backend/endpoints/Dockerfile ./backend/endpoints/ -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG && break 1
            sleep 1
          done
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          bash deploy_lambda_from_ecr.sh
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pluto-backend
          IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}-1.0.${{ github.run_number }}-api
          DESCRIPTION: ${{ steps.extract_branch.outputs.branch }}-1.0.${{ github.run_number }}-api
          FUNCTION_NAME: pluto-development-api
          ALIAS: development
  build-migrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Build, tag and push migrations image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pluto-backend
          IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}-1.0.${{ github.run_number }}-migrations
          DESCRIPTION: ${{ steps.extract_branch.outputs.branch }}-1.0.${{ github.run_number }}-migrations
          FUNCTION_NAME: pluto-development-migrations
          ALIAS: development
        run: |
          for i in $(seq 10)
          do
            docker build -f ./backend/endpoints/Dockerfile_migrations ./backend/endpoints -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG && break 1
            sleep 2
          done
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          bash deploy_lambda_from_ecr.sh
      - name: Invoke pluto-development-migrations lambda
        run: |
          bash invoke_migrations_lambda.sh
        env:
          FUNCTION_NAME: pluto-development-migrations
          ALIAS: development
